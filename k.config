// Karma configuration file, see link for more information
// https://karma-runner.github.io/1.0/config/configuration-file.html
// # Usually not needed, but install if missing
// npm install karma-coverage-istanbul-reporter --save-dev
// npm install karma-junit-reporter@2.0.1 --save-dev
//

module.exports = function (config) {
  config.set({
    basePath: '',
    frameworks: ['jasmine', '@angular-devkit/build-angular'],
    plugins: [
      require('karma-jasmine'),
      require('karma-chrome-launcher'),        // To launch Chrome/ChromeHeadless
      require('karma-jasmine-html-reporter'),  // For nice HTML reports during local dev
      require('karma-coverage-istanbul-reporter'), // For code coverage (generates LCOV)
      require('karma-junit-reporter'),       // For test execution reports (JUnit XML)
      require('@angular-devkit/build-angular/plugins/karma')
    ],
    client: {
      clearContext: false, // leave Jasmine Spec Runner output visible in browser
      jasmine: {
        // You can add configuration options for Jasmine here
        // For example, random: false, seed: 4321
      }
    },

    // Configure the coverage reporter (Istanbul)
    coverageIstanbulReporter: {
      dir: require('path').join(__dirname, './coverage/your-project-name'), // Output directory for coverage reports
      reports: ['html', 'lcovonly', 'text-summary'], // Generate LCOV, HTML, and text summary
      fixWebpackSourcePaths: true,
      thresholds: { // Optional: Enforce coverage thresholds
        // statements: 80,
        // lines: 80,
        // branches: 80,
        // functions: 80
      }
    },

    // Configure the JUnit reporter
    junitReporter: {
      outputDir: 'test-results/junit', // Directory where XML report files will be saved
      outputFile: 'results.xml',       // Name of the XML report file
      useBrowserName: false,           // Set to false for a single file output
      suite: '',                       // Optional: Define a suite name
    },

    // Define which reporters to use
    // 'progress' and 'kjhtml' are good for local dev feedback
    // 'coverage-istanbul' and 'junit' are for generating reports for SonarQube/CI
    reporters: ['progress', 'kjhtml', 'coverage-istanbul', 'junit'],

    port: 9876,
    colors: true,
    logLevel: config.LOG_INFO,
    autoWatch: false, // Set to false for CI runs
    browsers: ['ChromeHeadless'], // Use ChromeHeadless for CI
    singleRun: true, // Set to true for CI runs (runs tests once and exits)
    restartOnFileChange: false // Set to false for CI
  });
};
